<?php
  /**
   * @file
   * 
   * This module manages an infinite session for each Facebook App.  
   * http://wiki.developers.facebook.com/index.php/Infinite_session_keys
   */

  /**
   * hook_fb.
   */
function fb_infinite_fb($op, $data, &$return) {
  $fb = $data['fb'];
  $fb_app = $data['fb_app'];

  if ($op == FB_OP_GET_INFINITE_SESSION) {
    // The fb module is asking for infinite session login information.
    // This module knows it, so we provide it.
    $fb_app_data = fb_app_get_data($fb_app);
    $fb_infinite_data = $fb_app_data['fb_infinite'];
    if ($fb_infinite_data['fbu'] && $fb_infinite_data['key'])
      // Return array with FB id and apikey.
      $return = array($fb_infinite_data['fbu'], $fb_infinite_data['key']);
  }
}

/**
 * hook_menu
 */
function fb_infinite_menu() {
  $items['fb/infinite/display'] = 
    array('title' => t('Facebook session information'),
          'page callback' => 'fb_infinite_display_page',
          'access callback' => TRUE,
          'type' => MENU_CALLBACK,
    );
  
  $items['node/%fb_infinite/fb/infinite/test'] = 
    array('title' => 'Infinite session test',
          'page callback' => 'fb_infinite_test_page',
          'page arguments' => array(1),
          'access callback' => 'node_access',
          'access arguments' => array('update', 1),
          'type' => MENU_LOCAL_TASK,
    );
  
  return $items;
}


/**
 * Implementation of hook_load to create custom loader for hook_menu
 * Checks a fb_app nid to see if infinite session is configured
 *
 * see "Defining your own wildcard loader" - http://drupal.org/node/209056
 * passing $nid not needed if menu_get_object were to work
 */
function fb_infinite_load($nid) {
  $fb_app = fb_get_app(array('nid' => $nid));
  if ($fb_app) {
    // Only allow menu item if infinite session is configured.
    $fb_app_data = fb_app_get_data($fb_app);
    $fb_infinite_data = $fb_app_data['fb_infinite'];
    if (isset($fb_infinite_data['key'])) {
      return $fb_app;
    }
  }
}

/**
 * Implementation of hook_form_alter.
 */
function fb_infinite_form_alter(&$form, &$form_state, $form_id) {
  //drupal_set_message("fb_infinite_form_alter($form_id) " . dpr($form, 1)) . dpr($form_state, 1));
  
  // Add our settings to the fb_app edit form.
  if (is_array($form['fb_app_data'])) {
    $node = $form['#node'];
    $fb_app_data = fb_app_get_data($node->fb_app);
    $fb_infinite_data = $fb_app_data['fb_infinite'];
    
    $form['fb_app_data']['fb_infinite'] = 
      array('#type' => 'fieldset',
            '#collapsible' => TRUE,
            '#collapsed' => TRUE,
            '#title' => t('Facebook infinite session settings'),
            '#description' => t('An infinite session key is required to access the Facebook API from non-canvas pages.  For example, a cron job.'));
    if (!$node->nid) {
      // User must save apikey and secret before we can prompt for infinite session key.
      $form['fb_app_data']['fb_infinite']['message'] =
        array('#value' => '<p>'.t('Save your apikey and secret settings first.  Then return here to set up the infinite session.').'</p>');
    }
    else {
      if ($node->fb_app->canvas) {
        $form['fb_app_data']['fb_infinite']['help'] = array('#value' => t('<a href=!url target=_blank>Get your session key</a>.  If prompted to log in, be sure to check the box that prevents your session from expiring.', 
                                                                          array('!url' => "http://apps.facebook.com/".$node->fb_app->canvas."/fb/infinite/display")),
                                                            '#prefix' => '<p>',
                                                            '#suffix' => '</p>');
      }
      else {
        $form['fb_app_data']['fb_infinite']['help'] = array('#value' => t('Configure canvas pages for additional help generating an infinite session key.'),
                                                            '#prefix' => '<p>',
                                                            '#suffix' => '</p>');
      }
      
      $form['fb_app_data']['fb_infinite']['fbu'] = 
        array('#type' => textfield,
              '#title' => t('Facebook User ID'),
              '#default_value' => $fb_infinite_data['fbu'],
        );
      $form['fb_app_data']['fb_infinite']['key'] = 
        array('#type' => textfield,
              '#title' => t('Infinite Session Key'),
              '#default_value' => $fb_infinite_data['key'],
        );

      /* so far, I can't get this to work.
      $form['fb_app_data']['fb_infinite']['code'] =
        array('#type' => textfield,
              '#title' => t('One-time code'),
              '#description' => t('Get a one-time code from facebook, <a href=!url target=_blank>here</a>.',
                                  array('!url' => "http://www.facebook.com/code_gen.php?v=1.0&api_key=" . $node->fb_app->apikey)),
        );
      */
    }
  }
}

function fb_infinite_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  if ($node->type == 'fb_app') {
    if ($op == 'presave') {
      $fb_app_data = $node->fb_app_data;
      $fb_infinite_data = $fb_app_data['fb_infinite'];

      // This is an attempt to make the one-time code work.  I can't figure it out.
      // http://forum.developers.facebook.com/viewtopic.php?pid=76361#p76361
      if ($code = $fb_infinite_data['code']) {
        drupal_set_message("code is $code");
        $fb = fb_api_init($node->fb_app, FB_FBU_CURRENT); // Does not set user.
        
        $session = $fb->api_client->auth_getSession($code);
        //dpm($session, "auth_getSession returned");
      }
    }
  }
}


/**
 * Menu callback.  Ensures the user is logged in and displays user id and
 * session key.
 */
function fb_infinite_display_page() {
  global $fb, $fb_app;

  if (!$fb_app) {
    drupal_set_message(t('This page must be viewed as a Facebook canvas page.'), 'error');
    drupal_not_found();
    exit();
  }
  
  $fbu = $fb->require_login();
  if ($fb->api_client->users_hasAppPermission('offline_access')) {
    $output .= '<p>'.t('Facebook user id: %fbu',
                       array('%fbu' => $fb->api_client->users_getLoggedInUser())). '</p>';
    $output .= '<p>'.t('Facebook session key: %session',
                       array('%session' => $fb->api_client->session_key)). '</p>';
    $output .= '<p>'.t('Use the values above when configuring the infinite session of your Facebook App.').'</p>';
  }
  else {
    $output .= '<p><fb:prompt-permission perms="offline_access">' . t('Click here for a session that will not expire.') . '</fb:prompt-permission></p>';
    $output .= '<p>' . t('Refresh your browser after clicking the above link.') . '</p>';
  }
  return $output;
}

/**
 * Menu callback to test infinite session values.
 */
function fb_infinite_test_page($fb_app) {
  //dpm(func_get_args(), "fb_infinite_test_page");

  if ($GLOBALS['fb']) {
    $url = $GLOBALS['fb_old_base_url'] . "?q=".$_GET['q'];
    return t('Do not use this page from a canvas page.  Try !link.',
             array('!link' => l($url, $url)));
  }
  
  $fb = fb_api_init($fb_app, FB_FBU_INFINITE_SESSION);
  if ($fb) {
    $fbu = $fb->api_client->users_getLoggedInUser();
    if ($fbu) {
      $info = $fb->api_client->users_getInfo(array($fbu), 
                                             array('about_me',
                                                   'affiliations',
                                                   'name',
                                                   'is_app_user',
                                                   'pic_big',
                                                   'profile_update_time',
                                                   'status',
                                             ));
      $info = $info[0];
      $fb_link = l($info['name'], 'http://www.facebook.com/profile.php', 
                   array('query' => 'id='.$info['uid']));
      
      drupal_set_message(t('Infinite session key is working.'));
      $output .= '<p>'.t('Facebook infinite session user: !user',
                         array('!user' => $fb_link)) . '</p>';
      $output .= '<p>'.t('This page cannot test that the session key will never expire.  If your cron jobs start to fail, return here to test the login again.').'</p>';
      return $output;
    }
    else {
      drupal_set_message(t('Infinite session key test failed.'), 'error');
      // TODO: provide helpful hints of how to fix the problem.
      $output .= '<p>'.t('Unable to log into Facebook using infinite session key.').'</p>';
    }
  }
  else {
    drupal_set_message('Infinite session key test failed.', 'error');
    // TODO: provide helpful hints of how to fix the problem.
    $output .= '<p>'.t('Unable to log into Facebook using infinite session key.').'</p>';
  }
  
  return $output;
}

